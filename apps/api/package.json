{
  "name": "api",
  "version": "0.3.1",
  "description": "API for the project",
  "private": true,
  "scripts": {
    "dev": "pnpm run dev:kill && cd ../.. && uv run python apps/api/dev.py",
    "dev:kill": "lsof -t -i:8080 | xargs -r kill -9 || true",
    "start": "cd ../.. && uv run python apps/api/start.py",
    "start:kill": "lsof -t -i:8080 | xargs -r kill -9 || true",
    "lint": "uv run ruff check .",
    "lint:fix": "uv run ruff check --fix .",
    "clean": "rm -rf __pycache__ .pytest_cache .ruff_cache dist build *.egg-info .turbo",
    "format": "uv run ruff format .",
    "export": "cd ../.. && uv sync && uv export --no-hashes --format requirements-txt --output-file apps/api/requirements.txt",
    "precommit": "pnpm run lint:fix && pnpm run format",
    "deploy:staging:latest": "fly deploy --app mss-api-staging --image registry.fly.io/mss-api:latest && fly scale -a mss-api-staging -m 1gb -c 2 --region lax --min-machines 0",
    "deploy:production:latest": "fly deploy --app mss-api --image registry.fly.io/mss-api:latest && fly scale -a mss-api -m 1gb -c 4 --region lax --min-machines 1",
    "docker:latest:run": "docker run --name mss-api -p 8080:8080 registry.fly.io/mss-api:latest",
    "docker:build:latest": "cd ../../ && docker build -t registry.fly.io/mss-api:latest -f apps/api/Dockerfile .",
    "docker:pull:latest": "docker pull registry.fly.io/mss-api:latest",
    "docker:push:latest": "docker push registry.fly.io/mss-api:latest",
    "docker:release:latest": "pnpm run docker:build:latest && pnpm run docker:push:latest"
  }
}
